The ``name_module`` module
==========================

Using ``say_my_name``
---------------------

This is an example text file in reStructuredText format. First import
``say_my_name`` from the ``name_module`` module:

    >>> from name_module import say_my_name

Now use it to print a name:

    >>> say_my_name("John", "Doe")
    My name is John Doe

The ``say_my_name`` function requires at least one argument, the first name. The last name is optional and defaults to an empty string if not provided:

    >>> say_my_name("Jane")
    My name is Jane 

Handling errors is also an important part of using ``say_my_name``. If the inputs are not strings, the function will raise a TypeError:

    >>> say_my_name(123, "Doe")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name("John", [123])
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

As demonstrated, ``say_my_name`` is simple to use for printing names in a standard format, while also ensuring that inputs meet the expected type requirements.
