The ``math_matrix`` module
==========================

Using ``matrix_divided``
------------------------

This is an example text file in reStructuredText format. First import
``matrix_divided`` from the ``math_matrix`` module:

    >>> from math_matrix import matrix_divided

Now use it to divide a 2x2 matrix by a divisor:

    >>> matrix_divided([[4, 8], [16, 32]], 2)
    [[2.0, 4.0], [8.0, 16.0]]

Dividing each element in a matrix by a float:

    >>> matrix_divided([[1, 2], [3, 4]], 0.5)
    [[2.0, 4.0], [6.0, 8.0]]

Handling matrices containing both integers and floats, and dividing by an integer:

    >>> matrix_divided([[1.5, 3], [6, 8.5]], 2)
    [[0.75, 1.5], [3.0, 4.25]]

If the input is not a matrix (list of lists) or does not meet the requirements, ``matrix_divided`` will raise a TypeError:

    >>> matrix_divided([1, 2, 3], 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Ensuring all rows of the matrix have the same size is crucial:

    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

The elements of the matrix must be numbers (integers or floats):

    >>> matrix_divided([[1, 2], ["three", 4]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Attempting to divide by zero will raise a ZeroDivisionError:

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

The divisor must also be a valid number (not a string or any other type):

    >>> matrix_divided([[1, 2], [3, 4]], "five")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Even dividing an empty matrix should be handled correctly:

    >>> matrix_divided([], 1)
    []

As shown, ``matrix_divided`` is versatile for matrix operations, ensuring each element is divided according to the given divisor, while also validating the structure and type of the matrix and the divisor.
